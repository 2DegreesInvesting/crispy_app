apiVersion: apps/v1
kind: Deployment
metadata:
  name: shinyproxy-server
  namespace: shinyproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shinyproxy-server
  template:
    metadata:
      labels:
        app: shinyproxy-server
    spec:
      containers:
      - name: shinyproxy-server
        image: registry.digitalocean.com/theia-1in1000-shinyapps/shinyproxy:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "500m"
          limits:
            cpu: "1000m"        
---
apiVersion: v1
kind: Service
metadata:
  name: shinyproxy-server
  namespace: shinyproxy
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: shinyproxy-server
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: shinyproxy-hpa
  namespace: shinyproxy
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shinyproxy-server
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: shinyproxy-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec", "pods/portforward", "services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: shinyproxy-cluster-rolebinding
subjects:
- kind: ServiceAccount
  name: default
  namespace: shinyproxy
roleRef:
  kind: ClusterRole
  name: shinyproxy-cluster-role
  apiGroup: rbac.authorization.k8s.io
